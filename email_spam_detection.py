# -*- coding: utf-8 -*-
"""Email Spam Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16aPqyNiDPUPNUQdqYgxCFiOeRzvVE0NZ

Coderscave Email Spam Detection
"""

!pip install nltk

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import nltk
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer
from sklearn.pipeline import make_pipeline

nltk.download('stopwords')
nltk.download('punkt')

data = pd.read_csv('/content/spam_ham_dataset.csv')

data.head()

"""Data Preprocessing

"""

stop_words = set(stopwords.words('english'))
stemmer = PorterStemmer()

def preprocess_text(text):
    words = nltk.word_tokenize(text)
    words = [stemmer.stem(word.lower()) for word in words if word.isalpha() and word.lower() not in stop_words]
    return ' '.join(words)

data['processed_text'] = data['text'].apply(preprocess_text)

X_train, X_test, y_train, y_test = train_test_split(data['processed_text'], data['label'], test_size=0.2, random_state=42)

model = make_pipeline(CountVectorizer(), MultinomialNB())

"""Training the model"""

model.fit(X_train, y_train)

"""Making predictions by giving emails
Emails are classified as either spam or legitimate (ham)
"""

new_email = ["Congratulations! You've won a free vacation. Click here to claim your prize."]
new_email_processed = preprocess_text(new_email[0])

prediction = model.predict([new_email_processed])

print('The email is classified as:',prediction[0])

new_email2=['You are invited to attend the screening test for internship.']
new_email2_processed=preprocess_text(new_email2[0])

prediction2=model.predict([new_email2_processed])

print('The email is classified as:',prediction2[0])